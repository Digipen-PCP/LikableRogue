
class SlingProjControler : ZilchComponent
    {
    var PlayerCog : Cog  = null;
    var Pickup : Boolean = false;
    var LevelCog : Cog = null;
    function Initialize(init : CogInitializer)
        {   
        this.LevelCog = this.Space.FindObjectByName("LevelManager");
        this.PlayerCog = this.Space.FindObjectByName("Player");
        this.Owner.Collider.CollisionGroup.Name;
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        //Zero.Connect(this.Owner, Events.CollisionStarted);
        }

    function OnLogicUpdate(event : UpdateEvent)
        {
        if (this.Pickup==false&&(Math.Abs(this.Owner.RigidBody.Velocity.X)<3 && Math.Abs(this.Owner.RigidBody.Velocity.Y)<3))
            {
            this.Owner.SpriteParticleSystem.Texture=SpriteSource.Find("Square");
            this.Owner.SpriteParticleSystem.Tint=Real4(0.9,0.8,0.2,0.5);
            this.Owner.SphericalParticleEmitter.EmitRate=20;
            this.Owner.SphericalParticleEmitter.EmitVariance=5;
            this.Owner.SphericalParticleEmitter.EmitterSize=Real3(0.2,0.2,0.2);
            this.Owner.SphericalParticleEmitter.LifetimeVariance=0.2;
            this.Owner.SphericalParticleEmitter.Spin=0;
            this.Owner.SphericalParticleEmitter.EmitterVelocityPercent=0;
            this.Owner.SphericalParticleEmitter.RandomVelocity=Real3(2,2,2);
            this.Owner.LinearParticleAnimator.RandomForce=Real3(0,0,0);
            this.Owner.LinearParticleAnimator.Torque=1;
            this.Owner.LinearParticleAnimator.Dampening=5;
            this.Pickup=true;
            //this.Owner.BoxCollider.SendsEvents = true;
            //this.Owner.SphericalParticleEmitter.Active=false;
            }
        }
    function OnCollisionStarted(event : CollisionEvent)
        {
        //Console.WriteLine("coliding");
        if (event.OtherObject.Name == "Player")
            {
            event.OtherObject.PlayerController.HasPickup=true;
            ++this.PlayerCog.PlayerController.MaxProjec;
            this.LevelCog.LevelController.DynamicDifficulty += 0.02;
            this.Owner.Destroy();
            }
        }
}