class MushroomShotController : ZilchComponent
    {
    var Angle : Real;
    var MoveSpeed : Real;
    var MoveR3 : Real3;
    
    var LevelCog : Cog = null;
    
    function Initialize(init : CogInitializer)
    {
        this.LevelCog = this.Space.FindObjectByName("LevelManager");
        
        //have to put a delay or else the MushroomShot doesn't get the angle from the enemy.
        var seq = Action.Sequence(this.Owner.Actions);
        Actions.Delay(seq, 0.1);
        Actions.Call(seq, this.UpdateMovement);
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Owner.RigidBody.ApplyLinearImpulse(this.MoveR3 * this.MoveSpeed);
        this.Owner.RigidBody.Velocity = Math.Normalize(this.Owner.RigidBody.Velocity);
        this.Owner.RigidBody.Velocity *= this.MoveSpeed;
    }
    
    function UpdateMovement()
    {
        this.MoveSpeed = 1.5 + (this.LevelCog.LevelController.LevelDifficulty/2 + this.LevelCog.LevelController.DynamicDifficulty);
        this.MoveR3 = Real3(Math.Cos(this.Angle), Math.Sin(this.Angle), 0);
        //Console.WriteLine(this.Angle);    //debug
    }
        
    function OnCollisionStarted(event : CollisionEvent)
    {
        if (event.OtherObject.Name == "Wall")
        {
            this.Owner.Destroy();
        }
        
        if (event.OtherObject.Name == "SlashDamagBox")
        {
            this.Owner.Destroy();
        }
        
        if (event.OtherObject.Name == "SlingShotProject" && !event.OtherObject.SlingProjControler.Pickup)
        {
            this.Owner.Destroy();
            event.OtherObject.RigidBody.Velocity = Real3(0, 0, 0);
        }
        
        if (event.OtherObject.Name == "Player")
        {
            event.OtherObject.PlayerController.StunPlayer(0.4);
            event.OtherObject.PlayerController.CurentHP -= 1;
            this.Owner.Destroy();
            
            //update HUD
            var hudParent : Cog = this.Space.FindObjectByName( "Camera" );
            var hud : Cog = hudParent.FindChildByName( "HudContainer" );
            hud.HUDController.UpdateHealth( event.OtherObject );
        }
    }
    
}