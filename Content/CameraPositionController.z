class CameraPositionController : ZilchComponent
{
    // we'll want to manipulate the camera using this
    var LevelCamera : Cog = null;
    
    function Initialize(init : CogInitializer)
    {
        // find the camera, put it into the camera object
        this.LevelCamera = this.Space.FindObjectByName("Camera");
        
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }

    function OnCollisionStarted(event : CollisionEvent) {
        
        if ( event.OtherObject.Name == "Background" ) {
            // fetch the X and Y coordinates of the background we just collided with
            var toMoveCameraX : Integer = event.OtherObject.Transform.WorldTranslation.X as Integer;
            var toMoveCameraY : Integer = event.OtherObject.Transform.WorldTranslation.Y as Integer;
            // use the current camera Z in case this ever changes
            var toMoveCameraZ : Integer = this.LevelCamera.Transform.Translation.Z as Integer;
            // plop the new X, Y, and Z into a Real3, set the camera's position
            // (I do it this way because setting it through transform.X didn't work for some reason)
            this.LevelCamera.Transform.Translation = Real3( toMoveCameraX, toMoveCameraY, toMoveCameraZ );
        }
    }
}
