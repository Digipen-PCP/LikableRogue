class DropControler : ZilchComponent
{
    var LevelCog : Cog = null;
    var RandomGenerator : Random = Random();
    [Property]
    var ChiArch : Archetype = null;
    
    [Property]
    var ActTextArch : Archetype = null;
    
    function Initialize(init : CogInitializer)
    {
        this.LevelCog = this.Space.FindObjectByName("LevelManager");
        var intRand = this.RandomGenerator.Range(1, 18+(this.LevelCog.LevelController.LevelDifficulty * this.LevelCog.LevelController.DynamicDifficulty))as Integer;//add random stuff 1-2
        if(intRand>16)//2
        {
            this.Owner.Destroy();
        }
        else if(intRand > 14)//Sets To ProjDrop//2
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnProjDropCollisionStarted);
            this.Owner.Sprite.SpriteSource=SpriteSource.Find("Proj");
            this.Owner.Sprite.Color=Real4(1,1,175,1);
        }
        //Sets To HP_Drop
        else if (intRand > 9)//5
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnHP_DropCollisionStarted);
            this.Owner.Sprite.Color=Real4(0,1,0,1);
        }
        //sets MoveSpe
        else if (intRand > 6)//3
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnMoveSpeCollisionStarted);
            this.Owner.Sprite.Color=Real4(0,0,1,1);
        }
        //Sets To ProjSpeDrop
        else if(intRand > 3)//3
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnProjSpeDropCollisionStarted);
            this.Owner.Sprite.Color=Real4(1,1,0,1);
        }
        //Sets To SwordDmgDrop
        else if(intRand > 1)//2
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnSwordDmgDropCollisionStarted);
            this.Owner.Sprite.Color=Real4(1,0.5,0,1);
        }
        //1
        else if(intRand > 0)//Sets To MaxHP_Drop
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnMaxHP_DropCollisionStarted);
            this.Owner.Sprite.Color=Real4(1,0,0,1);
        }
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
    function SetParticle(colorset : Real4, event : CollisionEvent)
        {
        //activating particle efect
        this.Space.CreateAtPosition(this.ChiArch, event.OtherObject.Transform.Translation);
        var cog = this.Space.FindObjectByName("DropEfect");
        cog.SpriteParticleSystem.Tint=colorset;
        }
    function CreateActionText(setText : String, event : CollisionEvent)
        {
        this.Space.CreateAtPosition(this.ActTextArch, event.OtherObject.Transform.Translation);
        var cog = this.Space.FindObjectByName("ActText");
        cog.SpriteText.Color=this.Owner.Sprite.Color;
        cog.SpriteText.Text=setText;
        }
    //ProjDrop
    function OnProjDropCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("Ammo+1", event);
            this.SetParticle(Real4(0,0,0,0), event);
            ++event.OtherObject.PlayerController.MaxProjec;
            this.LevelCog.LevelController.DynamicDifficulty += 0.01;
            event.OtherObject.SoundEmitter.Play();
            this.Owner.Destroy();
            }
        }
    //HP_Drop
    function OnHP_DropCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("HP+1", event);
            this.SetParticle(this.Owner.Sprite.Color, event);
            event.OtherObject.SoundEmitter.Play();//Sound
            //buf
            event.OtherObject.PlayerController.CurentHP+=1;
            this.LevelCog.LevelController.DynamicDifficulty += 0.02;
            var hudParent : Cog = this.Space.FindObjectByName( "Camera" );
            var hud : Cog = hudParent.FindChildByName( "HudContainer" );
            hud.HUDController.UpdateHealth( event.OtherObject );
            this.Owner.Destroy();
            }
        }
    //MoveSpe
    function OnMoveSpeCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("Spe+1", event);
            this.SetParticle(this.Owner.Sprite.Color, event);
            event.OtherObject.SoundEmitter.Play();
            event.OtherObject.PlayerController.MoveSpeed+=1;
            this.LevelCog.LevelController.DynamicDifficulty += 0.03;
            this.Owner.Destroy();
            }
        }
    //ProjSpeDrop
    function OnProjSpeDropCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("Shot Speed/Dmg +1", event);
            this.SetParticle(this.Owner.Sprite.Color, event);
            event.OtherObject.SoundEmitter.Play();
            ++event.OtherObject.PlayerController.Pjtl_Damage;
            event.OtherObject.PlayerController.ProMoveSpeed+=4;
            this.LevelCog.LevelController.DynamicDifficulty += 0.04;
            this.Owner.Destroy();
            }
        }
    //SwordDmgDrop
    function OnSwordDmgDropCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("Sword Dmg+1", event);
            this.SetParticle(this.Owner.Sprite.Color, event);
            event.OtherObject.SoundEmitter.Play();
            event.OtherObject.PlayerController.SwordDamag+=2;
            this.LevelCog.LevelController.DynamicDifficulty += 0.05;
            this.Owner.Destroy();
            }
        }
    //MaxHP_Drop
    function OnMaxHP_DropCollisionStarted(event : CollisionEvent)
        {
        if (event.OtherObject.Name == "Player")
            {
            this.CreateActionText("Max HP+1", event);
            this.SetParticle(this.Owner.Sprite.Color, event);
            event.OtherObject.SoundEmitter.Play();
            event.OtherObject.PlayerController.MaxHP += 2;
            
            // I gotchu mane, dw - Ralph
            var hud : Cog = this.Space.FindObjectByName( "HudContainer" );
            // I made this function return true or false, so you can use an if statement
            // to check and see if your code exectured properly.
            // it returns false if you submit a number that's not divisble by two.
            hud.HUDController.AddHealth( 2 );
            // ok your code resumes here
            
            this.LevelCog.LevelController.DynamicDifficulty += 0.06;
            this.Owner.Destroy();
            }
        }
}
