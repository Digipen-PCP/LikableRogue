class CheatCodeController : ZilchComponent
{
    [Property]
    var SpriteText : Archetype = null;
    
    var PlayerCog : Cog = null;
    
    var CameraCog : Cog = null;
    
    // bools for different cheats
    var GodMode     : Boolean = false;
    var SuperSpeed  : Boolean = false;
    var Noclip      : Boolean = false;
    var Berzerker   : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        this.PlayerCog = this.Space.FindObjectByName( "Player" );
        this.CameraCog = this.Space.FindObjectByName( "Camera" );
        
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        // keep the HP at max if GodMode is enabled
        if ( this.GodMode == true )
        {
            this.PlayerCog.PlayerController.CurentHP = this.PlayerCog.PlayerController.MaxHP;
        }
        
        // if super speed is enabled, set speed to max
        // when it's disabled, set it to like 10, fuck it
        if ( this.SuperSpeed == true )
        {
            this.PlayerCog.PlayerController.MoveSpeed = 30;
        }
        
        /// begin keyboard shortcut detection ///
        
        // godmode cheat
        // activated by pressing shift+G
        if ( Zero.Keyboard.KeyIsDown(Keys.Shift) && Zero.Keyboard.KeyIsPressed(Keys.G) )
        {
            if ( this.GodMode == false )
            {
                this.GodMode = true;
                this.DisplayCheatText( this.SpriteText, "God mode enabled..." );
            }
            else
            {
                this.GodMode = false;
                this.DisplayCheatText( this.SpriteText, "God mode disabled..." );
            }
        }
        
        // super speed cheat
        // activated by pressing shift+F
        if ( Zero.Keyboard.KeyIsDown(Keys.Shift) && Zero.Keyboard.KeyIsPressed(Keys.F) )
        {
            if ( this.SuperSpeed == false )
            {
                this.SuperSpeed = true;
                this.DisplayCheatText( this.SpriteText, "Super speed enabled..." );
            }
            else
            {
                this.SuperSpeed = false;
                this.DisplayCheatText( this.SpriteText, "Super speed disabled..." );
                this.PlayerCog.PlayerController.MoveSpeed = 7;
            }
        }
        
        // noclip cheat
        // activated by pressing shift+N
        if ( Zero.Keyboard.KeyIsDown(Keys.Shift) && Zero.Keyboard.KeyIsPressed(Keys.N) )
        {
            if ( this.Noclip == false )
            {
                this.Noclip = true;
                this.PlayerCog.CapsuleCollider.Ghost = true;
                this.DisplayCheatText( this.SpriteText, "Noclip enabled..." );
            }
            else
            {
                this.Noclip = false;
                this.PlayerCog.CapsuleCollider.Ghost = false;
                this.DisplayCheatText( this.SpriteText, "Noclip disabled..." );
            }
        }
    }
    
    function DisplayCheatText( textCog : Archetype, text : String )
    {
        // create a new action sequence for delays, property changes, etc
        var seq = Action.Sequence(this.Owner.Actions);
        // create the actual spriteText that we'll be manipulating
        var cheatText = this.Space.CreateAtPosition( textCog, 
                                                     Real3(this.CameraCog.Transform.WorldTranslation.X, 
                                                           this.CameraCog.Transform.WorldTranslation.Y - 5, 
                                                           2.0) );
        
        // set the text to invisible at first so we don't see it
        cheatText.SpriteText.Color = Real4( 1.0, 0.1, 0.1, 0.0 );
        // change the text to what we pass to it
        cheatText.SpriteText.Text = text;
        
        // fade in the text, then fade it out
        Action.Property( seq, @cheatText.SpriteText.Color, Real4(1.0, 0.1, 0.1, 1.00), 0.25, Ease.Linear );
        Action.Delay( seq, 1.5 );
        Action.Property( seq, @cheatText.SpriteText.Color, Real4(1.0, 0.1, 0.1, 0.0), 0.25, Ease.Linear );
        Action.Call( seq, cheatText.Destroy );
        
        // get rid of the text so it's not just invisible
        //cheatText.Destroy();
        
    }
}
