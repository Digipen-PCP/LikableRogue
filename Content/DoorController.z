/* 
 * TODO:
 *   - playerLoc returns funky results for rooms
 *     that are not the origin room. gotta figure 
 *     out how to fix that.
 *
 * NB: the door Real3() is based off of the Centering
 *     of the archetype, rather than the center of the world
 * 
*/

class DoorController : ZilchComponent
{
    [Property]
    var IsLocked : Boolean   = false;
    
    var MyLocation : Real3   = Real3(0, 0, 0);
    
    var ContainingRoom : Cog = null;
    
    var IsPlayerTouchingMe : Boolean = false;
    
    var PlayerCog : Cog = null;
    
    var LevelCog : Cog = null;
    function Initialize(init : CogInitializer)
    {
        
        this.LevelCog = this.Space.FindObjectByName("LevelManager");
    
        // initialize location for collision
        this.MyLocation = this.Owner.Transform.WorldTranslation;
        
        // initialize containing room
        this.ContainingRoom = this.Owner.Parent;
        
        // Connect to collision events
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
        //Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
        
        // Connect to physics update
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnCollisionPersisted(event : CollisionEvent)
    {
        //debugging
        //Console.WriteLine("`this.Owner.Name`\tcollided with\t`event.OtherObject.Name`");
        
        if ((event.OtherObject.Name == "Player") && event.OtherObject.PlayerController.CurentHP>0) 
        {
            
            // get the location of the player in order to calculate where he is
            // in relation to us.
            var playerLoc : Real3 = event.OtherObject.Transform.Translation;
            
            // now some logic
            // if the player is going in a direction
            // and the player is _allowed_ to go in that direction
            // and the door _isn't_ locked
            // then translate the player to where he should go
            if((this.Owner.Name == "SouthDoor") && (event.OtherObject.PlayerController.Gamepad.IsButtonHeld(7) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
            {
                event.OtherObject.PlayerController.HasDoor=true;
                var toPutPlayer : Real3 = Real3( this.MyLocation.X, playerLoc.Y + ((this.MyLocation.Y - playerLoc.Y) - 1.7), 0 );
                event.OtherObject.Transform.Translation = toPutPlayer;
                this.LevelCog.LevelController.DynamicDifficulty += 0.05;
            }
            else if(this.Owner.Name == "NorthDoor" && (event.OtherObject.PlayerController.Gamepad.IsButtonHeld(7) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
            {
                event.OtherObject.PlayerController.HasDoor=true;
                var toPutPlayer : Real3 = Real3( this.MyLocation.X, playerLoc.Y + ((this.MyLocation.Y - playerLoc.Y) + 1.7), 0 );
                event.OtherObject.Transform.Translation = toPutPlayer;
                this.LevelCog.LevelController.DynamicDifficulty += 0.05;
            }
            else if(this.Owner.Name == "EastDoor" && (event.OtherObject.PlayerController.Gamepad.IsButtonHeld(7) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
            {
                event.OtherObject.PlayerController.HasDoor=true;
                var toPutPlayer : Real3 = Real3( playerLoc.X + ((this.MyLocation.X - playerLoc.X) + 1), this.MyLocation.Y, 0 );
                event.OtherObject.Transform.Translation = toPutPlayer;
                this.LevelCog.LevelController.DynamicDifficulty += 0.05;
            }
            else if(this.Owner.Name == "WestDoor" && (event.OtherObject.PlayerController.Gamepad.IsButtonHeld(7) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
            {
                event.OtherObject.PlayerController.HasDoor=true;
                var toPutPlayer : Real3 = Real3( playerLoc.X + ((this.MyLocation.X - playerLoc.X) - 1), this.MyLocation.Y, 0 );
                event.OtherObject.Transform.Translation = toPutPlayer;
                this.LevelCog.LevelController.DynamicDifficulty += 0.05;
            }
        }
    }
}
